pli wikipedia pli from wikipedia free encyclopedia redirect pl1 jump navig jump search new program languag redirect for process implement new program languag see program languag design design implement pli paradigm procedur imper structur design ibm share languag develop committe develop ibm first appear 1964 stabl releas ibm enterpris pli zos 531 septemb 2019 websit bitsaverstrailingedgecompdfibm360pli dialect plm xpl plp plc pls plas plx pl6 pl8 epl sl1 influenc cobol fortran algol influenc cms2 spk b rexx as400 control languag c pli wikibook pli program languag one pronounc pi l wn sometim written pl12 procedur imper comput program languag develop publish ibm it design scientif engin busi system program it use academ commerci industri organ sinc introduc 1960s still used3 plis main domain data process numer comput scientif comput system program it support recurs structur program link data structur handl fixedpoint floatingpoint complex charact string handl bit string handl the languag syntax englishlik suit describ complex data format wide set function avail verifi manipul content 1 earli histori 2 goal principl 3 languag summari 4 standard 5 implement 51 ibm pli f d compil 52 multic pli deriv 53 ibm pli optim checkout compil 54 digit pli 55 teach subset compil 56 ibm pli os2 aix linux zos 561 data type 562 competit pc c 563 program readabl make intent explicit 564 structur program addit 565 interrupt handl 57 other mainfram minicomput compil 58 pli compil microsoft net 59 pli compil person comput unix 510 special purpos system pli compil 511 pli dialect compil 6 usag 7 evolut pli languag 71 signific featur omit standard 711 multi task 712 preprocessor 713 structur program addit 714 debug facil 72 signific featur develop sinc standard 8 critic 81 implement issu 82 programm issu 9 special topic pli 91 storag class 92 storag type share 93 onunit except handl 94 go to nonfix target 10 sampl program 101 hello world program 102 search string 11 see also 12 note 13 refer 131 textbook 132 standard 133 refer manual 14 extern link earli historyedit in 1950s earli 1960s busi scientif user program differ comput hardwar use differ program languag busi user move autocod via comtran cobol scientif user program general interpret programm gip fortran algol georg other the ibm system3604 announc 1964 deliv 1966 design common machin architectur group user supersed exist ibm architectur similar ibm want singl program languag user it hope fortran could extend includ featur need commerci programm in octob 1963 committe formed5 compos origin three ibmer new york three member share ibm scientif user group propos extens fortran given constraint fortran unabl embark design new program languag base loos algol label npl this acronym conflict uk nation physic laboratori replaced6 briefli mppl multipurpos program languag 1965 with7 pli roman numer i the first definit appear april 196489 ibm took npl start point complet design level first compil could written npl definit incomplet scope detail10 control pli language11 vest initi new york program center later ibm uk laboratori hursley the share guid user group involv extend languag role ibm process control languag pli project the experi defin larg languag show need formal definit pli a project set 1967 ibm laboratori vienna make unambigu complet specification12 this led turn one first larg scale formal method develop vdm fred brook credit ensur pli charact data type13 the languag first specifi detail manual pli languag specif c286571 written new york 1965 supersed pli languag specif gy336003 written hursley 1967 ibm continu develop pli late sixti earli seventi publish gy336003 manual these manual use multic group earli implement the first compil deliv 1966 the standard pli approv 1976 goal principlesedit the goal pli evolv earli develop languag competit cobol record handl report write requir the languag scope use grew includ system program eventdriven program addit goal pli were4 perform compil code competit fortran achievedcit need extens new hardwar new applic area improv product program process transfer effort programm compil machin independ oper effect main comput hardwar oper system to achiev goal pli borrow idea contemporari languag ad substanti new capabl cast distinct concis readabl syntax mani principl capabl combin give languag charact import meet languag goal block structur under semant includ recurs similar algol 60 argument pass use call refer use dummi variabl valu need call valu a wide rang comput data type program control data type form data structur strong type dynam extent array string inherit extent procedur paramet concis syntax express declar statement permit abbrevi suitabl charact set 60 glyph subsett 48 an extens structur default statement option declar hide complex facilit extend languag minim keystrok power iter process good support structur program there reserv word although function name date time prove imposs meet goal new attribut statement statement option could ad pli without invalid exist program not even if then els do reserved14 orthogon capabl independ capabl freeli combin capabl wherev meaning each capabl avail context meaning exploit wide possibl avoid arbitrari restrict orthogon help make languag largeclarif need except handl capabl control intercept except condit run time program divid separ compil section extens compiletim facil aka macro part standard tailor combin section sourc code complet program extern name bind separ compil procedur singl program debug facil integr languag languag summaryedit the languag design thing programmers15 the summari extract ansi pli standard16 ansi pli generalpurpos subset standard17 a pli program consist set procedur written sequenc statement the includ construct use includ text sourc program translat all statement type summar group give overview languag standard use organ categori statement structur procedur proc entri begin do end declar declar dcl default dft format flow control call if select go to return stop null statement categori statement interrupt handl on signal revert storag alloc alloc free assign statement inputoutput open close stream inputoutput get put record inputoutput read write rewrit locat delet featur multitask pli preprocessor standard support pli f compil implement discuss languag evolut section name may declar repres data follow type either singl valu aggreg form array lowerbound upperbound per dimens structur compris nest structur array scalar variabl arithmet expand charact pictur arithmet data pictur charact data area bit entri file format label offset pointer the arithmet type compris attribut base binari decim scale fix float mode real complex precis number digit fix point number scale factor the base scale precis scale factor pictureforarithmet type encod within picturespecif the mode specifi separ pictur specif appli real imaginari part valu comput express written use specif set oper builtin function may appli aggreg well singl valu togeth userdefin procedur likewis may oper return aggreg well singl valu the assign statement assign valu one variabl there reserv word pli a statement termin semicolon the maximum length statement implement defin a comment may appear anywher program space permit preced charact forward slash asterisk termin charact asterisk forward slash ie this comment statement may labelprefix introduc entri name entri procedur statement label name condit prefix enabl disabl comput condit eg nosiz entri label name may singl identifi identifi follow subscript list constant l122a 0 a sequenc statement becom group preced do statement follow end statement group may includ nest group begin block the if statement specifi group singl statement then part els part see sampl program the group unit iter the begin block begin stmtlist end may contain declar name intern procedur local block a procedur start procedur statement termin syntact end statement the bodi procedur sequenc block group statement contain declar name procedur local procedur extern procedur an onunit singl statement block statement written execut one condit occur comput condit convers conv fixedoverflow fofl overflow ofl size stringrang strg stringsiz strz subscriptrang subrg underflow ufl zerodivid zdiv inputoutput condit endfilefil endpagefil keyfil namefil recordfil transmitfil undefinedfilefil undf one condit area condit identifi error finish a declar identifi may contain one follow attribut need mutual consist data attribut inputoutput attribut other attribut align direct automat auto areaareas environmentopt env basedrefer binari precis bin input builtin bit maximumlength key condit cond charactermaximumlength char output constant complex precis cplx print control ctl decim precis dec sequenti seql definedrefer def dimensionattribut stream extern ext entryparamet descriptor list updat genericcriteria list file record initialvaluelist init fix precis intern int float number digit like unsubscript refer format local label optionsopt member paramet parm nonvari nonvar posit express pos offsetrefer static pictur picturespecif pic variabl pointer ptr structur unalign unal vari var current compil kedno micro focus particular ibm implement mani extens standard version languag the ibm extens summaris implement subsect compil later although extens common compil lack current standard mean compat guarante standardizationedit languag standard began april 1966 europ ecma tc10 in 1969 ansi establish composit languag develop committe nicknam kludg later renam x3j1 pli18 standard becam joint effort ecma tc10 ansi x3j1 a subset gy33600319 document offer joint effort ibm becam base document standard the major featur omit base document multitask attribut program optim eg normal abnorm propos chang base document vote upon committe in event committe disagre chair initi michael marcotti general motor car hoar repres icl resolv disagr in addit ibm honeywel cdc data general digit equip prime comput burrough rca univac serv x3j1 along major user eastman kodak mitr union carbid bell laboratori various govern univers repres further develop languag occur standard bodi continu improv structur program intern consist omiss obscur contenti featur as languag develop near end x3j1tc10 realiz number problem document written english text discuss singl item might appear multipl place might might agre it difficult determin omiss well inconsist consequ david beech ibm robert freiburghous honeywel milton barber cdc m donald maclaren argonn nation laboratori craig franklin data general loi frampton digit equip editor dj andrew ibm undertook rewrit entir document produc one complet chapter the standard couch formal definition16 use pli machine20 specifi semant it first possibl program languag standard written semiform definit a pli generalpurpos subset subsetg standard issu ansi 198117 revis publish 198721 the general purpos subset wide adopt kernel pli implement implementationsedit ibm pli f d compilersedit pli first implement ibm hursley laboratori unit kingdom part develop system360 the first product pli compil pli f compil os360 oper system built john nash team hursley uk runtim librari team manag im nobbi clark the pli f compil written entir system360 assembl language22 releas 1 ship 1966 os360 realmemori environ compil design system littl 64 kilobyt real storag f 64 kb s360 parlanc to fit larg compil 44 kilobyt memori avail 64kilobyt machin compil consist control phase larg number compil phase approach 100 the phase brought memori disk one time handl particular languag featur aspect compil each phase make singl pass partiallycompil program usual held memory23 aspect languag still design pli f implement omit later releas pli record io ship pli f releas 2 the list process functions24 base variabl pointer area offset locatemod io first ship releas 4 in major attempt speed pli code compet fortran object code pli f releas 5 substanti program optim doloop facilit reorder option procedur a version pli f releas tss360 timeshar oper system system360 model 67 adapt ibm mohans lab the ibm la gaud lab franc develop languag convers programs25 convert fortran cobol algol program pli f level pli the pli d compil use 16 kilobyt memori develop ibm germani dos360 low end oper system it implement subset pli languag requir string array fix extent thus simplifi runtim environ reflect under oper system lack dynam storag alloc control storag class26 it ship within year pli f multic pli derivativesedit compil implement sever group earli 1960s the multic project mit one first develop oper system highlevel languag use earli pli epl subset dialect pli implement languag 1964 epl develop bell lab mit dougla mcilroy robert morri other the influenti multic pli compiler27 sourc compil technolog use number manufactur softwar group epl system program languag dialect pli capabl absent origin pli like vari length strings28 the honeywel pli compil seri 60 implement full ansi x3j1 standard29 ibm pli optim checkout compilersedit the pli optim checkout compil produc hursley support common level pli language30 aim replac pli f compil the checkout compil rewrit pli f bsl ibm plilik proprietari implement languag later pls22 the perform object set compil shown ibm present bcs22 the compil produc ident result checkout compil use debug program would submit optim given compil entir differ design handl full pli languag goal challeng achiev the pli optim compil took pli f compil ibm workhors compil 1970s 1990s like pli f multipl pass compil 44 kilobyt design point entir new design unlik f compil perform compil time evalu constant express use runtim librari reduc maximum memori compil phase 28 kilobyt a secondtim around design succeed elimin annoy pli f cascad diagnostics31 it written s360 macro assembl team led toni burbridg work pli f macro defin autom common compil servic shield compil writer task manag realmod storag allow compil move easili memori model the gamut program optim techniqu develop contemporari ibm fortran h compil deploy optim equal fortran execut speed hand good programm announc ibm s370 1970 ship first dos360 oper system august 1971 short afterward os36032 first virtual memori ibm oper system osvs1 mvs vmcms the develop unawar shoehorn code 28 kb section ibm poughkeepsi final readi ship virtual memori support os360 it support batch program environ tso cms could run interact this compil went mani version cover mainfram oper system includ oper system japanes plugcompat machin pcms the compil supersed ibm pli os2 aix linux zos the pli checkout compiler3334 colloqui the checker announc august 1970 design speed improv debug pli program the team led brian mark the threepass design cut time compil program 25 taken f compil it run interact termin convert pli program intern format htext this format interpret checkout compil runtim detect virtual type error pointer repres 16 byte contain target address descript referenc item thus permit bad pointer use diagnos in convers environ error detect control pass user inspect variabl introduc debug statement edit sourc program over time debug capabl mainfram program environ develop function offer compil withdrawn 1990s digit pliedit perhap commerci success implement asid ibm digit equip 1988 releas ansi pli 1987 subset the implement strict superset ansi x341981 pli general purpos subset provid featur new ansi x3741987 pli general purpos subset35 the front end design robert freiburghous code generat implement dave cutler manag design implement vaxvm it run vms vax alpha tru64 unipris system inc respons compiler36 teach subset compilersedit in late 1960s earli 1970s mani us canadian univers establish timeshar servic campus need convers compilerinterpret use teach scienc mathemat engin comput scienc dartmouth develop basic pli popular choic concis easi teach as ibm offer unsuitable37 number school built subset pli interact support exampl in 1960s earli 1970s allenbabcock implement remot user share hardwar rush time share system ibm system360 model 50 custom microcod subsequ implement ibm cps interact timeshar system os360 aim teach comput scienc basic offer limit subset pli languag addit basic remot job entri facil plc dialect teach compil develop cornel univers unusu capabl never fail compil program use extens automat correct mani syntax error convert remain syntax error output statement the languag almost pli implement ibm38 plc fast compil sl1 student language1 student languageon subset language13940 pli subset initi avail late 1960s ran interpret ibm 1130 instruct use strong point plago creat polytechn institut brooklyn use simplifi subset pli language41 focus good diagnost error messag fast compil time the comput system research group univers toronto produc spk compil support sequenc subset pli call sp1 sp2 sp3 sp8 teach program program ran without error spk compil produc result contemporari pli compil ibm pli f compil ibm checkout compil cornel univers plc compiler42 other exampl pl0 p grous univers new south wale plum marvin zelkowitz univers maryland43 pluto univers toronto ibm pli os2 aix linux zosedit in major revamp pli ibm santa teresa california launch entir new compil 1992 the initi shipment os2 includ ansig featur mani new pli features44 subsequ releas cover addit platform mvs vm os390 aix window although support window sinc withdrawn45 continu add function make pli fulli competit languag offer pc particular c c area overtaken the correspond ibm languag environ support interoper pli program databas transact system program written c c cobol compil support data type need intercommun languag the pli design principl retain withstood major extens compris sever new data type new statement statement option new except condit new organis program sourc the result languag compat superset pli standard earlier ibm compil major topic ad pli new attribut better support userdefin data type defin alia ordin defin structur statement introduc userdefin type handl locat data type type data type union data type builtin function manipul new type addit data type attribut correspond common pc data type eg unsign varyingz improv readabl program often render impli usag explicit eg byvalu attribut paramet addit structur program construct interrupt handl addit compil time preprocessor extend offer almost pli string handl featur interfac applic develop environ the latest seri pli compil zos call enterpris pli zos leverag code generat latest zarchitectur processor z14 z13 zec12 zbc12 z196 z114 via use archlvl parm control pass compil second high level languag support zos languag environ xl cc first enterpris cobol v5 last data typesedit ordin new comput data type the ordin facil like pascal eg defin ordin colour red yellow green blue violet addit name intern valu access via builtin function builtin function provid access ordin valu predecessor successor the definestat see allow addit type declar compos plis builtin attribut the handledata structur locat data type similar pointer data type strong type bind particular data structur the oper use select data structur use handl the union attribut equival cell earli pli specif permit sever scalar variabl array structur share storag unit occupi amount storag need largest altern competit pc cedit these attribut ad the string attribut varyingz zerotermin charact string hexadec widechar graphic the option arithmet attribut unsign sign bigendian littleendian unsign necessit upthru downthru option iter group enabl countercontrol loop execut without exceed limit valu also essenti ordin good document loop the datepattern attribut control date represent addit bring time date best current practic new function manipul date includ day daystod convert date number day general datetim function chang date format new stringhandl function ad centr text edit use pictur format trim blank select charact head tail text verifyr verifi right search talli function compound assign oper la c eg ad a 1 equival a a 1 addit paramet descriptor attribut ad omit argument variabl length argument list program readabl make intent explicitedit the valu attribut declar identifi constant deriv specif liter valu restrict express paramet byaddr pass address byvalu pass valu attribut the assign nonassign attribut prevent unintend assign do forev obviat need contriv construct do while 1b the definestat introduc userspecifi name eg integ combin builtin attribut eg fix binary310 thus defin alia integ fix binary310 creat type name integ alia set builtin attribut fix binary310 defin structur appli structur member provid type name set structur attribut correspond substructur member declar use structur declar generalis like attribut structur program additionsedit a leav statement exit loop iter continu next iter loop upthru downthru option iter group the packag construct consist set procedur declar use unit variabl declar outsid procedur local packag use static base control storag procedur name use packag also local made extern mean export option packagestat interrupt handlingedit the resignalstat execut onunit termin execut onunit rais condit procedur call current one thus pass control correspond onunit procedur the invalidop condit handl invalid oper code detect pc processor well illeg arithmet oper subtract two infinit valu the anycondit condit provid intercept condit specif onunit provid current procedur the storag condit rais alloc statement unabl obtain suffici storag other mainfram minicomput compilersedit a number vendor produc compil compet ibm pli f optim compil mainfram minicomput 1970s in 1980s target usual emerg ansig subset in 1974 burrough corpor announc pli b6700 b770046 univac releas univac pli47 1970s also use variant pli pli plus system program from 1978 data general provid pli eclips eclips mv platform run ao aosv aosv ii oper systems48 a number oper system util program written languag cdc deliv optim subset pli compil cyber 70 170 6000 series49 fujitsu deliv pli compil equival pli optim stratus technolog pli ansi g implementation50 plg subset ibm series1 mini comput real time extens pli languag refer gc3400850 pli compil microsoft netedit in 2011 raincod design full legaci compil microsoft net net core platform name the raincod pli compil pli compil person comput unixedit in 1970s 1980s digit research sold pli compil cpm pli80 cpm86 pli86 person comput dos51 it base subset g pli51 written plm micro focus implement open pli windows52 unixlinux systems53 acquir liant ibm deliv pli os244 1994 pli aix54 1995 iron spring pli os2 later linux introduc 2007 special purpos system pli compilersedit prime comput use two differ pli dialect system program languag primo oper system plp start version 18 spl start version 19 ibm deliv pli series1 comput famili 1970s55 paul abraham nyus courant institut mathemat scienc wrote cim pli 1972 pli bootstrap via pli f it support 70 pli compil cdc 660056 pl8 pl8 socal 80 pli develop ibm research 1970s use sever ibm intern system develop task eg millicod zarchitectur honeywel inc develop pl6 use creat cp6 oper system pli dialect compilersedit pls dialect pli initi call bsl develop late 1960s becam ibm system program languag almost ibm mainfram system softwar 1970s 1980s written pls it differ pli data type convers runtim environ structur map differ assign byte byte copi all string array fix extent use refer option ibm use improv renam pls plx intern work current oper system os390 zos it also use zvse zvm compon db2 zos also written plx xpl dialect pli use write compil use xpl compil techniqu xpl ad heap string datatyp small subset pli hal realtim aerospac program languag best known use space shuttl program it design intermetr 1970s nasa hal implement xpl ibm various subcontractor also develop anoth pli variant earli 1970s support signal process navi call spli sabretalk realtim dialect pli use program sabr airlin reserv system usageedit pli implement develop mainfram late 1960s mini comput 1970s person computers51 1980s 1990s although main use mainfram pli version dos microsoft window os2 aix openvm unix it wide use busi data processing57 system use write oper system certain platform veri complex power system built pli the sas system initi written pli sas data step still model pli syntax the pioneer onlin airlin reserv system sabr origin written ibm 7090 assembl the s360 version larg written use sabretalk purpos built subset pli compil dedic control program the multic oper system larg written pli pli use write execut formal definition58 interpret ibm system network architectur pli fulfil support hope would displac fortran cobol becom major player mainfram it remain minor signific player there cannot definit explan trend 1970s 1980s milit success progress reduc territori pli enjoy competit advantag first natur mainfram softwar environ chang applic subsystem databas transact process cic im oracl system 370 applic generat becam focus mainfram user applic develop signific part languag becam irrelev need use correspond nativ featur subsystem task much inputoutput fortran use applic area confin pli cobol territori user stay cobol but pc becam domin environ program develop fortran cobol pli becam minor languag overtaken c java like second pli overtaken system program field the ibm system program communiti readi use pli instead ibm develop adopt proprietari dialect pli system program pls59 with success pls insid ibm c outsid ibm uniqu pli strength system program becam less valuabl third develop environ grew capabl interact softwar develop made uniqu pli interact debug strength less valuabl fourth cobol fortran ad featur structur program charact string oper object orient reduc plis relat advantag on mainfram substanti busi issu stake ibm hardwar competitor littl gain much lose success pli compil develop expens ibm compil group inbuilt competit advantag mani ibm user wish avoid lock proprietari solut with earli support pli vendor best avoid pli evolut pli languageedit this articl use pli standard refer point languag featur but number featur signific earli implement standard offer nonibm compil and de facto languag continu grow standard ultim driven develop person comput signific featur omit standardedit multi taskingedit multi task implement pli f optim newer aix zos compil it compris data type event task taskopt callstat fork waitstat join delaydelaytim eventopt record io statement unlock statement unlock lock record exclus file event data identifi particular event indic whether complet 1b incomplet 0b task data item identifi particular task process indic prioriti relat task preprocessoredit further inform pli preprocessor the first ibm compil time preprocessor built ibm boston advanc program center locat cambridg mass ship pli f compil the includ statement standard rest featur the dec kednos60 pli compil implement much set featur ibm addit ibm continu add preprocessor featur compil the preprocessor treat written sourc program sequenc token copi output sourc file act when token encount follow compil time statement execut identifi token encount identifi declar activ assign compil time valu identifi replac valu token ad output stream requir action eg valu activ compil time express thus compil time variabl pi could declar activ assign use pi 314159265 subsequ occurr pi would replac 314159265 the data type support fix decim integ charact string vari length maximum length the structur statement labellistdo iter statement labellistend procedurenam procedur paramet list return type statement labellistend labellistifthenels simpl statement also may labellist activateidentifierlist deactiv assign statement declar identifierattributelist go to label includ null statement the featur allow programm use identifi constant eg product part number mathemat constant supersed standard name constant comput data condit compil iter generat sourc code possibl compiletim facil support standard sever manufactur implement facil structur program additionsedit structur program addit made pli standard accept standard these featur leavestat exit iter do untilopt repeatopt ad do case statement general form select express when express group otherwis group these featur includ dec pli61 ibm pli checkout optim compil 30 debug facilitiesedit pli f offer debug facil put forward standard implement other notabl checkvariablelist condit prefix check oncondit snap option the ibm optim checkout compil ad addit featur appropri convers mainfram program environ eg attent condit signific featur develop sinc standardedit sever attempt made design structur member type could one sever datatyp cell earli ibm with growth class program theori approach becam possibl pli base union type etc ad sever compil pli conceiv singlebyt charact world with support japanes chines languag becom essenti develop intern code page charact string concept expand accommod wide nonasciiebcd string time date handl overhaul deal millennium problem introduct datetim function return date time one 35 differ format sever date function deal convers day second criticismsedit implement issuesedit though languag easi learn use implement pli compil difficult timeconsum a languag larg pli need subset vendor could produc user master this resolv ansi g publish the compil time facil uniqu pli took ad implement effort addit compil pass a pli compil two four time larg compar fortran cobol compil also much slowersuppos offset gain programm product this anticip ibm first compil written10 some argu pli unusu hard parse62 the pli keyword reserv programm use variabl procedur name program becaus origin plif compil attempt autocorrect encount keyword use incorrect context often assum variabl name this lead cascad diagnostics31 problem solv later compil the effort need produc good object code perhap underestim initi design languag program optim need compet excel program optim carri avail fortran compil unusu complex owe side effect pervas problem alias variabl unpredict modif occur asynchron except handler may provid on statement unseen caller togeth make difficult reliabl predict program variabl might modifi runtim in typic use howev userwritten error handler onunit often make assign variabl in spite aforement difficulti ibm produc pli optim compil 197132 pli contain mani rare use featur multitask support ibm extens languag add cost complex compil coprocess facil requir multiprogram environ support nonblock multipl thread process oper system compil writer free select whether implement featur an undeclar variabl default declar first occurrencethus misspel might lead unpredict result this implicit declar differ fortran program for plif howev attribut list enabl programm detect misspel undeclar variabl programm issuesedit mani programm slow move cobol fortran due perceiv complex languag immatur pli f compil programm sharpli divid scientif programm use fortran busi programm use cobol signific tension even dislik group pli syntax borrow cobol fortran syntax so instead notic featur would make job easier fortran programm time notic cobol syntax opinion busi languag cobol programm notic fortran syntax look upon scientif languag both cobol fortran programm view bigger version languag somewhat intimid languag disinclin adopt anoth factor pseudosimilar cobol fortran algol these pli element look similar one languag work differ pli such frustrat left mani experienc programm jaundic view pli often activ dislik languag an earli unix fortun file contain follow tongueincheek descript languag speak someon delv intricaci pli i sure real men could written machinehog cyclegrab allencompass monster alloc array free middl third sure whi multipli charact string time bit string assign result float decim go ahead free control variabl procedur paramet realloc pass back overlay three differ type variabl memori locat anyth say write recurs macro well real men use rescan how could languag obvious design written real men intend real man use on posit side full support pointer data type includ pointer structur recurs multitask string handl extens builtin function meant pli inde quit leap forward compar program languag time howev enough persuad major programm shop switch pli the pli f compil compil time preprocessor unusu outsid lisp world63 use target languag syntax semant eg compar c preprocessor direct special topic pliedit storag classesedit pli provid sever storag class indic lifetim variabl storag manag static automat control base the simplest implement static indic memori alloc initi loadtim done cobol workingstorag earli fortran this default extern variabl plis default storag class intern variabl automat similar blockstructur languag influenc algol like auto storag class c languag default storag alloc pascal localstorag ibm cobol storag automat variabl alloc upon entri beginblock procedur onunit declar the compil runtim system alloc memori stack frame contain housekeep inform if variabl declar initialattribut code set initi valu execut time care requir manag use initi proper larg amount code execut initi variabl everi time scope enter especi variabl array structur storag automat variabl freed block exit static control base variabl use retain variabl content invoc procedur block control storag also manag use stack push pop alloc stack manag programm use alloc free statement storag base variabl manag use allocatefre instead stack alloc independ lifetim address offset pointer variabl the area attribut use declar programmerdefin heap data alloc freed within specif area area delet read written unit64pp235 274 storag type sharingedit there sever way access alloc storag differ data declar some well defin safe use safe care program inher unsaf andor machin dependent64pp262267178180 pass variabl argument paramet refer allow argument alloc storag referenc use paramet the defin attribut eg dcl a1010 b2929 defin a allow part variabl storag use differ consist declar the languag definit includ cell attribut later renam union allow differ definit data share storag this support mani earli ibm compil these usag safe machin independ record io list process produc situat programm need fit declar storag next record item know type data structur base variabl pointer key program the data structur must design appropri typic use field data structur encod inform type size the field held preced structur constraint current one where encod preced structur program need alloc base variabl declar match current item use express extent need where type size inform kept current structur self defin structur typedefin field must ahead type depend item place everi version data structur the referopt use selfdefin extent eg string length dcl 1 a base 2 n binari 2 b charlength refer an etc length use alloc instanc data structur for selfdefin structur type refer field place ahead real data if record data set item list data structur organis way handl safe machin independ way pli implement except pli checkout compil keep track data structur use storag first alloc ani base declar use pointer storag access storag inher unsaf machin depend howev usag becom import pointer arithmet typic ad certain amount known address this contenti subject comput scienc in addit problem wild refer buffer overrun issu aris due align length data type use particular machin compil mani case pointer arithmet might need involv find pointer element insid larger data structur the addr function comput pointer safe machin independ pointer arithmet may accomplish alias binari variabl pointer dcl p pointer n fix binary31 basedaddrp n n 255 it reli pointer length fix binary31 integ align boundari with preval c free easi attitud pointer arithmet recent ibm pli compil allow pointer use addit subtract oper give simplest syntax compil option disallow practic safeti machin independ paramount onunit except handlingedit when pli design program ran batch mode possibl intervent programm termin an except condit divis zero would abort program yield hexadecim core dump pli except handl via onunit allow program stay control face hardwar oper system except recov debug inform close grace as program becam proper debug except handl could remov disabl level control becam less import convers execut becam commonplac comput except handl enabl disabl condit prefix statement blocksinclud onunit procedur eg size nosubscriptrang ai bic oper system except inputoutput storag manag alway enabl the onunit singl statement beginblock introduc onstat execut on statement enabl condit specifi eg on zerodivid onunit when except condit occur condit enabl onunit condit execut onunit inherit call chain when block procedur onunit activ onunit establish invok activ inherit new activ they may overridden anoth onstat reestablish revertstat the except simul use signalstat eg help debug except handler the dynam inherit principl onunit allow routin handl except occur within subroutin use if onunit effect condit rais standard system action taken often rais error condit the system action reestablish use system option onstat with condit possibl complet execut onunit return point interrupt eg stringrang underflow convers overflow area file condit resum normal execut with condit subscriptrang error condit rais attempt an onunit may termin go to prevent return point interrupt permit program continu execut elsewher determin programm an onunit need design deal except occur onunit the on error system statement allow nest error trap error occur within onunit control might pass oper system system dump might produc comput condit continu execut mention the pli record io statement relat simpl syntax offer option mani situat endoffil record transmiss error occur record read written instead complex handl onunit various file condit the approach adopt area suballoc area condit the exist except handl onunit effect optim variabl inspect alter onunit valu variabl might otherwis kept regist statement may need return storag statement this discuss section implement issu above64pp249376 go to nonfix targetedit pli counterpart cobol fortran special go to statement syntax cobol fortran exist code two special two type go to target alway alter cobol assign fortran alter paragraphnamexxx to proceed to paranamezzz65 there otherhelp restrict especi program recurs attribut method thread option65 assign 1860 to igottago66 go to igottago one enhanc add builtin document go to igottago 1860 1914 1939 restrict variabl valu one label list66 go to base variabl subscriptlik valu go to 1914 1939 2140 mychoice67 go to paraon paratwo parathre depend on idecide68 pli statement label variabl label attribut store valu statement label later use goto statement labl1
